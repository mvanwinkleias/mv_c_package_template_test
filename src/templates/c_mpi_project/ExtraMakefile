# This file contains stuff that I run in order to test how these
# builds work.  I haven't found a way to consistently integrate
# them into something like Makefile.am

MAKEFILE_PATH = $(strip $(dir $(firstword $(MAKEFILE_LIST))))

.PHONY: initialize_project
initialize_project:
	autoreconf --install
	libtoolize
	automake --add-missing
	autoreconf -fi

.PHONY: build_clean
build_clean:
	-cd "$(MAKEFILE_PATH)/build" && make distclean
	-rm -r "$(MAKEFILE_PATH)/build/"*

.PHONY: build_dir
build_dir:
	mkdir -p "$(MAKEFILE_PATH)/build"

.PHONY: test_build
test_build: build_dir
	cd "$(MAKEFILE_PATH)/build" && \
	../configure --prefix="$$(pwd)/install" && \
	make && \
	make install

.PHONY: test_mpi_project_all_automatic
test_mpi_project_all_automatic: \
	debug_build \
	debug_run_valgrind

.PHONY: test_deb_package_build
test_deb_package_build: build_dir
	cd "$(MAKEFILE_PATH)/build" && \
	../configure --prefix="$$(pwd)/install" && \
	make distcheck && \
	make dist-gzip && \
	debmake -a [% project.project_name %]-*.tar.gz -i "debuild -i -us -uc -b"

debug_build:
	mkdir -p "$(MAKEFILE_PATH)/debug"
	cd "$(MAKEFILE_PATH)/debug" && \
	../configure --prefix="$$(pwd)/install" \
		--enable-g=dbg,mem,meminit \
		CPPFLAGS="-DDEBUG -I/path/to/valgrind/includes" \
		CFLAGS="-g -O0" && \
	make && \
	make install

.PHONY: debug_run_valgrind
debug_run_valgrind:
	cd "$(MAKEFILE_PATH)/debug/install/bin/" && \
	mpirun -n 2 valgrind ./[% project.project_name %]
	# Keep in mind, for some reason the valgrind output for an MPI
	# project isn't "Clean".  The above process could have worked fine,
	# valgrind might show memory is leaking.  At this time I don't
	# have an explanation
