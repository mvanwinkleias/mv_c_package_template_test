# This file contains stuff that I run in order to test how these
# builds work.  I haven't found a way to consistently integrate
# them into something like Makefile.am

MAKEFILE_PATH = $(strip $(dir $(firstword $(MAKEFILE_LIST))))

.PHONY: initialize_project
initialize_project:
	autoreconf --install
	libtoolize
	automake --add-missing
	autoreconf -fi

.PHONY: build_clean
build_clean:
	-cd "$(MAKEFILE_PATH)/build" && make distclean
	-rm -r "$(MAKEFILE_PATH)/build/"*

.PHONY: test_project_build
test_project_build:
	cd "$(MAKEFILE_PATH)/build" && \
	../configure --prefix="$$(pwd)/install" && \
	make dist-gzip && \
	debmake -a [% project.project_name %]*.tar.gz -i "debuild -i -us -uc -b"


.PHONY: debug_build
# These flags are recommended if / when you use valgrind, or GDB
debug_build:
	cd "$(MAKEFILE_PATH)/debug" && \
	../configure --prefix="$$(pwd)/install" \
		CPPFLAGS=-DDEBUG CFLAGS="-g -O0" && \
	make && \
	make install

.PHONY: debug_run
# In gdb:
#	layout next
#	list
#	run
#
# Commands
#	break (main, or whatever subroutine)
# 	refresh - redraw the screen
#  	ctrl + c - halt
# 	n (next) - next line
# 	step - descend
debug_run:
	cd "$(MAKEFILE_PATH)/debug/install/bin/" && \
	gdb [% project.project_name %]

.PHONY: debug_run_valgrind
debug_run_valgrind:
	cd "$(MAKEFILE_PATH)/debug/install/bin/" && \
	valgrind [% project.project_name %]
	

.PHONY: debug_clean
debug_clean:
	-cd "$(MAKEFILE_PATH)/debug" && make distclean
	-rm -r "$(MAKEFILE_PATH)/debug/"*
